/*
1. Реализовать функцию ввода элементов массива с выделением динамической памяти. Pазмер массива также запрашивать в функции.
2. Реализовать функцию создания динамического массива, заданного размера и заполнения его случайными числами.
3. Реализовать функцию вставки значения в середину динамического массива. Выделять память под массив нового размера. 
	Если число элементов в массиве нечётное, вставить элемент после центрального.
4. Реализовать функцию удаления дубликатов из массива. Освобождать не используемую память.
5.1) Функция проверки упорядоченности массива по возрастанию.
5.2) Функция двоичного поиска значения в упорядоченном массиве.
5.3) Рекурсивная функция быстрой сортировки.
*/

#include <iostream>
#include "defs.h"

using namespace std;

int main() {

	setlocale(LC_ALL, "Rus");

	// # 1
	cout << "Создание динамического массива\n";
	int* a;
	size_t n;
	read(a, n);

	for (int i{ 0 }; i < n; i++) {
		cout << a[i] << "\t";
	}
	cout << endl << endl;

	// # 2
	cout << "Создание случайного динамического массива\n";
	size_t n0;
	cout << "Введите размер массива: ";
	cin >> n0;
	int* c = random_array(n0);
	for (int i{ 0 }; i < n0; i++) {
		cout << c[i] << "\t";
	}
	cout << endl << endl;

	// # 3
	cout << "Вставка элемента в середину массива\n";
	size_t n1{ 4 };
	int* d = new int[n1]{ 1, 2, 3, 4 };
	put_elem(d, n1);
	
	for (int i{ 0 }; i < n1; i++) {
		cout << d[i] << "\t";
	}
	cout << endl << endl;

	size_t n2{ 5 };
	int* v = new int[n2] { 1, 2, 3, 4, 5 };
	put_elem(v, n2);

	for (int i{ 0 }; i < n2; i++) {
		cout << v[i] << "\t";
	}
	cout << endl << endl;

	//system("pause");
	return 0;
}